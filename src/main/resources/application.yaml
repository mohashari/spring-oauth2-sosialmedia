spring:
  datasource:
    url: jdbc:mysql://localhost:3306/spring_sosial?useSSL=false
    username: root
    password: welcome1

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: or.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 749802155367-d8fojj6e0de3d75manlhepursju0kj5p.apps.googleusercontent.com
            clientSecret: T16oHMYfbYB7AQUjpUZWwFD1
            redirectUriTemplate: "{baseUrl}/oauth2/callback{registrationId}"
            scope:
              - email
              - public_profile



app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
